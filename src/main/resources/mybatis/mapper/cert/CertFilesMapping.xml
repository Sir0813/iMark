<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dm.user.mapper.CertFilesMapper">
    <resultMap id="BaseResultMap" type="com.dm.user.entity.CertFiles">
        <id column="file_id" property="fileId" jdbcType="INTEGER"/>
        <result column="file_type" property="fileType" jdbcType="VARCHAR"/>
        <result column="file_name" property="fileName" jdbcType="VARCHAR"/>
        <result column="file_size" property="fileSize" jdbcType="DOUBLE"/>
        <result column="file_path" property="filePath" jdbcType="VARCHAR"/>
        <result column="cert_id" property="certId" jdbcType="INTEGER"/>
        <result column="file_seq" property="fileSeq" jdbcType="VARCHAR"/>
        <result column="file_url" property="fileUrl" jdbcType="VARCHAR"/>
        <result column="file_hash" property="fileHash" jdbcType="VARCHAR"/>
        <result column="thumb_url" property="thumbUrl" jdbcType="VARCHAR"/>
        <result column="detail" property="detail" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    file_id, file_type, file_name, file_size, file_path, cert_id, file_seq, file_url, file_hash, thumb_url, detail
    </sql>
    <select id="selectByUrl" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from biz_cert_files
        where file_url = #{frontPath}
    </select>
    <delete id="deleteByCertId" parameterType="java.lang.Integer">
    delete from
    biz_cert_files
    where cert_id = #{certId}
  </delete>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from biz_cert_files
        where file_id = #{fileId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from biz_cert_files
    where file_id = #{fileId,jdbcType=INTEGER}
  </delete>
    <insert id="insertSelective" parameterType="com.dm.user.entity.CertFiles" useGeneratedKeys="true"
            keyProperty="fileId">
        insert into biz_cert_files
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="fileType != null">
                file_type,
            </if>
            <if test="fileName != null">
                file_name,
            </if>
            <if test="fileSize != null">
                file_size,
            </if>
            <if test="filePath != null">
                file_path,
            </if>
            <if test="certId != null">
                cert_id,
            </if>
            <if test="fileSeq != null">
                file_seq,
            </if>
            <if test="fileUrl != null">
                file_url,
            </if>
            <if test="fileHash != null">
                file_hash,
            </if>
            <if test="thumbUrl != null">
                thumb_url,
            </if>
            <if test="detail != null">
                detail,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="fileType != null">
                #{fileType,jdbcType=VARCHAR},
            </if>
            <if test="fileName != null">
                #{fileName,jdbcType=VARCHAR},
            </if>
            <if test="fileSize != null">
                #{fileSize,jdbcType=DOUBLE},
            </if>
            <if test="filePath != null">
                #{filePath,jdbcType=VARCHAR},
            </if>
            <if test="certId != null">
                #{certId,jdbcType=INTEGER},
            </if>
            <if test="fileSeq != null">
                #{fileSeq,jdbcType=VARCHAR},
            </if>
            <if test="fileUrl != null">
                #{fileUrl,jdbcType=VARCHAR},
            </if>
            <if test="fileHash != null">
                #{fileHash,jdbcType=VARCHAR},
            </if>
            <if test="thumbUrl != null">
                #{thumbUrl,jdbcType=VARCHAR},
            </if>
            <if test="detail != null">
                #{detail,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.dm.user.entity.CertFiles">
        update biz_cert_files
        <set>
            <if test="fileType != null">
                file_type = #{fileType,jdbcType=VARCHAR},
            </if>
            <if test="fileName != null">
                file_name = #{fileName,jdbcType=VARCHAR},
            </if>
            <if test="fileSize != null">
                file_size = #{fileSize,jdbcType=DOUBLE},
            </if>
            <if test="filePath != null">
                file_path = #{filePath,jdbcType=VARCHAR},
            </if>
            <if test="certId != null">
                cert_id = #{certId,jdbcType=INTEGER},
            </if>
            <if test="fileSeq != null">
                file_seq = #{fileSeq,jdbcType=VARCHAR},
            </if>
            <if test="fileUrl != null">
                file_url = #{fileUrl,jdbcType=VARCHAR},
            </if>
            <if test="fileHash != null">
                file_hash = #{fileHash,jdbcType=VARCHAR},
            </if>
            <if test="thumbUrl != null">
                thumb_url = #{thumbUrl,jdbcType=VARCHAR},
            </if>
            <if test="detail != null">
                detail = #{detail,jdbcType=VARCHAR},
            </if>
        </set>
        where file_id = #{fileId,jdbcType=INTEGER}
    </update>
    <select id="findByFilesIds" resultMap="BaseResultMap" parameterType="java.util.List">
        select
        file_id, file_path, file_name, file_url, file_type, file_hash, file_seq, cert_id
        from biz_cert_files
        where file_id in
        <foreach collection="array" item="fileid" open="(" close=")" separator=",">
            #{fileid}
        </foreach>
        order by file_seq asc
    </select>
    <select id="findByFilesIds2" resultType="com.dm.user.entity.CertFiles" parameterType="java.util.List">
        select
        certfile.`file_id` as `fileId`,
        certfile.`file_url` as `fileUrl`,
        applyfile.`describe` as `describe`,
        certfile.`thumb_url` as `thumbUrl`,
        certfile.`detail` as detail,
        filelog.file_status AS fileStatus,
        filelog.log_string as logString
        from biz_cert_files as `certfile`
        left join biz_item_apply_files as applyfile
        on certfile.file_id = applyfile.fileid
        LEFT JOIN biz_apply_file_log AS filelog ON (filelog.file_id = certfile.file_id and filelog.file_status = 0)
        where certfile.file_id in
        <foreach collection="array" item="fileid" open="(" close=")" separator=",">
            #{fileid}
        </foreach>
        GROUP BY certfile.file_Id
        ORDER BY
        certfile.file_id asc
    </select>
    <select id="selectUpdateFiles" parameterType="java.util.Map" resultType="com.dm.user.entity.CertFiles">
        SELECT
            filelog.`id` AS `fileId`,
            certfile.`detail` AS detail,
            filelog.file_status AS fileStatus,
            filelog.log_string AS logString
        FROM
            biz_cert_files AS `certfile`
        LEFT JOIN biz_item_apply_files AS applyfile ON certfile.file_id = applyfile.fileid
        LEFT JOIN biz_apply_file_log AS filelog ON filelog.file_id = certfile.file_id
        WHERE
            filelog.file_status = 0
        AND applyfile.applyid = #{applyid}
        AND applyfile.file_log_id NOT IN (
            SELECT
                file_log_id
            FROM
                biz_item_apply_files
            WHERE
                applyid = #{applyid}
            AND file_types = #{fileType}
            AND file_log_id IS NOT NULL
        )
        GROUP BY
            certfile.file_Id
        ORDER BY
            certfile.file_id ASC
    </select>
    <select id="selectAddFiles" parameterType="java.util.Map" resultType="com.dm.user.entity.CertFiles">
        SELECT
            applysup.files_desc AS logString,
            applysup.id AS fileId
        FROM
            biz_item_apply_supplement AS applysup
        LEFT JOIN biz_item_apply_files AS applyfiles ON applyfiles.applyid = applysup.apply_id
        WHERE
            applysup.apply_id = #{applyid}
        AND (
            applysup.id NOT IN (
                SELECT
                    supplement_id
                FROM
                    biz_item_apply_files
                WHERE
                    applyid = #{applyid}
                AND file_types = #{fileType}
                AND supplement_id IS NOT NULL
            )
        )
        GROUP BY
            applysup.id
    </select>
    <select id="selectIsAddFiles" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT
            certfile.file_url,
            certfile.thumb_url,
            certfile.detail,
            certfile.file_id
        FROM
            biz_item_apply_files AS applyfile
        LEFT JOIN biz_cert_files AS certfile ON applyfile.fileid = certfile.file_id
        WHERE
            applyfile.applyid = #{applyid}
        AND applyfile.file_types = 5
        AND applyfile.is_del = 1
    </select>
    <select id="selectIsUpdateFiles" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT
            certfile.file_url,
            certfile.thumb_url,
            certfile.detail,
            certfile.file_id
        FROM
            biz_item_apply_files AS applyfile
        LEFT JOIN biz_cert_files AS certfile ON applyfile.fileid = certfile.file_id
        WHERE
            applyfile.applyid = #{applyid}
        AND applyfile.file_types = 6
        AND applyfile.is_del = 1
    </select>
</mapper>