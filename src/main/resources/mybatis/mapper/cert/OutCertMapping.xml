<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dm.user.mapper.OutCertMapper">
  <resultMap id="BaseResultMap" type="com.dm.user.entity.OutCert">
    <id column="out_cert_id" jdbcType="INTEGER" property="outCertId" />
    <result column="out_cert_time" jdbcType="TIMESTAMP" property="outCertTime" />
    <result column="out_cert_name" jdbcType="VARCHAR" property="outCertName" />
    <result column="out_cert_desc" jdbcType="VARCHAR" property="outCertDesc" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="file_id" jdbcType="INTEGER" property="fileId" />
    <result column="confirm_id" jdbcType="INTEGER" property="confirmId" />
  </resultMap>
  <sql id="Base_Column_List">
    out_cert_id, out_cert_time, out_cert_name, out_cert_desc, user_id, file_id, confirm_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from biz_out_cert
    where out_cert_id = #{outCertId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from biz_out_cert
    where out_cert_id = #{outCertId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.dm.user.entity.OutCert">
    insert into biz_out_cert (out_cert_id, out_cert_time, out_cert_name, 
      out_cert_desc, user_id, file_id, 
      confirm_id)
    values (#{outCertId,jdbcType=INTEGER}, #{outCertTime,jdbcType=TIMESTAMP}, #{outCertName,jdbcType=VARCHAR}, 
      #{outCertDesc,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{fileId,jdbcType=INTEGER}, 
      #{confirmId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.dm.user.entity.OutCert">
    insert into biz_out_cert
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="outCertId != null">
        out_cert_id,
      </if>
      <if test="outCertTime != null">
        out_cert_time,
      </if>
      <if test="outCertName != null">
        out_cert_name,
      </if>
      <if test="outCertDesc != null">
        out_cert_desc,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="fileId != null">
        file_id,
      </if>
      <if test="confirmId != null">
        confirm_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="outCertId != null">
        #{outCertId,jdbcType=INTEGER},
      </if>
      <if test="outCertTime != null">
        #{outCertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="outCertName != null">
        #{outCertName,jdbcType=VARCHAR},
      </if>
      <if test="outCertDesc != null">
        #{outCertDesc,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="fileId != null">
        #{fileId,jdbcType=INTEGER},
      </if>
      <if test="confirmId != null">
        #{confirmId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dm.user.entity.OutCert">
    update biz_out_cert
    <set>
      <if test="outCertTime != null">
        out_cert_time = #{outCertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="outCertName != null">
        out_cert_name = #{outCertName,jdbcType=VARCHAR},
      </if>
      <if test="outCertDesc != null">
        out_cert_desc = #{outCertDesc,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="fileId != null">
        file_id = #{fileId,jdbcType=INTEGER},
      </if>
      <if test="confirmId != null">
        confirm_id = #{confirmId,jdbcType=INTEGER},
      </if>
    </set>
    where out_cert_id = #{outCertId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dm.user.entity.OutCert">
    update biz_out_cert
    set out_cert_time = #{outCertTime,jdbcType=TIMESTAMP},
      out_cert_name = #{outCertName,jdbcType=VARCHAR},
      out_cert_desc = #{outCertDesc,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      file_id = #{fileId,jdbcType=INTEGER},
      confirm_id = #{confirmId,jdbcType=INTEGER}
    where out_cert_id = #{outCertId,jdbcType=INTEGER}
  </update>
</mapper>