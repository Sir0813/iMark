<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dm.user.mapper.ContactMapper">
    <resultMap id="BaseResultMap" type="com.dm.user.entity.Contact">
        <id column="contact_id" jdbcType="INTEGER" property="contactId"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="out_cert_id" jdbcType="INTEGER" property="outCertId"/>
        <result column="contact_person" jdbcType="VARCHAR" property="contactPerson"/>
        <result column="contact_phone" jdbcType="VARCHAR" property="contactPhone"/>
    </resultMap>
    <sql id="Base_Column_List">
    contact_id, user_id, out_cert_id, contact_person, contact_phone
  </sql>
    <select id="selectByPhone" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from biz_outcert_contact
        where contact_phone = #{username}
    </select>
    <select id="selectByUserId" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from biz_outcert_contact
        where user_id = #{userId}
        order by out_cert_id desc
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from biz_outcert_contact
        where contact_id = #{contactId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from biz_outcert_contact
    where contact_id = #{contactId,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.dm.user.entity.Contact">
    insert into biz_outcert_contact (contact_id, user_id, out_cert_id, 
      contact_person, contact_phone)
    values (#{contactId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{outCertId,jdbcType=INTEGER}, 
      #{contactPerson,jdbcType=VARCHAR}, #{contactPhone,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.dm.user.entity.Contact" useGeneratedKeys="true"
            keyProperty="contactId">
        insert into biz_outcert_contact
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="outCertId != null">
                out_cert_id,
            </if>
            <if test="contactPerson != null">
                contact_person,
            </if>
            <if test="contactPhone != null">
                contact_phone,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="outCertId != null">
                #{outCertId,jdbcType=INTEGER},
            </if>
            <if test="contactPerson != null">
                #{contactPerson,jdbcType=VARCHAR},
            </if>
            <if test="contactPhone != null">
                #{contactPhone,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.dm.user.entity.Contact">
        update biz_outcert_contact
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="outCertId != null">
                out_cert_id = #{outCertId,jdbcType=INTEGER},
            </if>
            <if test="contactPerson != null">
                contact_person = #{contactPerson,jdbcType=VARCHAR},
            </if>
            <if test="contactPhone != null">
                contact_phone = #{contactPhone,jdbcType=VARCHAR},
            </if>
        </set>
        where contact_id = #{contactId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.dm.user.entity.Contact">
    update biz_outcert_contact
    set user_id = #{userId,jdbcType=INTEGER},
      out_cert_id = #{outCertId,jdbcType=INTEGER},
      contact_person = #{contactPerson,jdbcType=VARCHAR},
      contact_phone = #{contactPhone,jdbcType=VARCHAR}
    where contact_id = #{contactId,jdbcType=INTEGER}
  </update>
</mapper>