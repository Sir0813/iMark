<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dm.user.mapper.WfItemNodeMapper">
    <resultMap id="BaseResultMap" type="com.dm.user.entity.WfItemNode">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="apply_id" jdbcType="INTEGER" property="applyId"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="order" jdbcType="INTEGER" property="order"/>
        <result column="nodename" jdbcType="VARCHAR" property="nodename"/>
        <result column="describe" jdbcType="VARCHAR" property="describe"/>
        <result column="audit_userid" jdbcType="VARCHAR" property="auditUserid"/>
        <result column="created_date" jdbcType="VARCHAR" property="createdDate"/>
        <result column="created_by" jdbcType="VARCHAR" property="createdBy"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, apply_id, user_id, `order`, nodename, `describe`, audit_userid, created_date, created_by
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from wf_item_node_define
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectByUserId" parameterType="java.lang.String" resultType="com.dm.user.entity.ProcessConfig">
        SELECT
            node.id AS id,
            node.audit_userid AS auditUserid,
            node.`order` AS `order`,
            usercard.real_name AS realName,
            ucuser.username AS userName,
            ucuser.head_photo AS headPhoto
        FROM
            `wf_item_node_define` AS node
        LEFT JOIN sys_user_card AS usercard ON node.audit_userid = usercard.userid
        LEFT JOIN uc_user AS ucuser ON ucuser.userid = node.audit_userid
        WHERE
            node.user_id = #{userId}
        AND node.apply_id = 0
        ORDER BY
            node.`order` ASC
    </select>
    <delete id="deleteByUserId" parameterType="java.util.Map">
        DELETE
        FROM
            wf_item_node_define
        WHERE
            user_id = #{userId}
        AND (apply_id = 0 OR apply_id = #{applyId})
    </delete>
    <insert id="insertData" parameterType="com.dm.user.entity.WfItemNode" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `wf_item_node_define` (
            `user_id`,
            `apply_id`,
            `order`,
            `nodename`,
            `describe`,
            `audit_userid`,
            `created_date`,
            `created_by`
        )
        VALUES
            (
                #{userId},
                #{applyId},
                #{order},
                #{nodename},
                #{describe},
                #{auditUserid},
                #{createdDate},
                #{createdBy}
            )
    </insert>
    <select id="isNotProgress" parameterType="java.lang.Integer" resultType="com.dm.user.entity.ProgressView">
        SELECT
            IFNULL(
                orguser.remarks,
                usercard.real_name
            ) AS realName,
            ucuser.username AS userName,
            node.id AS id
        FROM
            wf_item_node_define AS node
        LEFT JOIN biz_org_users AS orguser ON node.audit_userid = orguser.userid
        LEFT JOIN sys_user_card AS usercard ON node.audit_userid = usercard.userid
        LEFT JOIN uc_user AS ucuser ON node.audit_userid = ucuser.userid
        WHERE
            node.apply_id = #{applyid}
        AND node.`order` >= (
            SELECT
                `order`
            FROM
                wf_item_node_define
            WHERE
                id = (
                    SELECT
                        wfin.nodeid
                    FROM
                        wf_instance AS wfin
                    WHERE
                        wfin.id = (
                            SELECT
                                apply.wf_instance_id
                            FROM
                                biz_item_apply AS apply
                            WHERE
                                apply.applyid = #{applyid}
                        )
                )
        )
        GROUP BY
            node.id
    </select>
    <select id="selectLaseNode" parameterType="java.util.Map" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"></include>
        FROM
        `wf_item_node_define`
        WHERE
        apply_id = #{applyid}
        ORDER BY
        `order` DESC
        LIMIT 1
    </select>
    <select id="selectNextNode" parameterType="java.util.Map" resultMap="BaseResultMap">
        SELECT
            id
        FROM
            wf_item_node_define
        WHERE
            apply_id = #{applyid}
        AND `order` = (
            (
                SELECT
                    `order`
                FROM
                    `wf_item_node_define`
                WHERE
                    id = #{nodeId}
            ) + 1
        )
    </select>
    <select id="selectFirstNode" parameterType="java.util.Map" resultMap="BaseResultMap">
        SELECT
            id,apply_id,audit_userid, `order`
        FROM
            wf_item_node_define
        WHERE
            apply_id = #{applyid}
        ORDER BY
            `order` ASC
        LIMIT 1
    </select>
    <select id="selectPreviousNode" parameterType="java.util.Map" resultMap="BaseResultMap">
        SELECT
            id
        FROM
            wf_item_node_define
        WHERE
            apply_id = #{applyId}
        AND `order` = (
            (
                SELECT
                    `order`
                FROM
                    wf_item_node_define
                WHERE
                    id = #{nodeId}
            ) - 1
        )
    </select>
    <select id="selectByAuditIdAndApplyId" parameterType="java.util.Map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"></include>
        from wf_item_node_define
        where apply_id = #{applyid}
        and audit_userid = #{userId}
        limit 1
    </select>
</mapper>